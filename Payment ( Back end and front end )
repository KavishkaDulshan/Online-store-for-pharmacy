// Data base code

CREATE TABLE Payment (
    PaymentID INT AUTO_INCREMENT PRIMARY KEY,
    OrderID INT,
    Amount DECIMAL(10, 2) NOT NULL,
    PaymentDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    PaymentMethod VARCHAR(50),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);


// payments.js.

const express = require('express');
const router = express.Router();
const paymentController = require('../controllers/paymentController');

router.get('/', paymentController.getPayments);
router.post('/', paymentController.addPayment);
router.get('/:id', paymentController.getPaymentById);
router.delete('/:id', paymentController.deletePayment);

module.exports = router;


// paymentController.js.

const db = require('../server').get('db');

exports.getPayments = (req, res) => {
    db.query('SELECT * FROM Payment', (err, results) => {
        if (err) res.status(500).json({ error: err.message });
        else res.json(results);
    });
};

exports.addPayment = (req, res) => {
    const { orderId, amount, paymentMethod } = req.body;
    const sql = 'INSERT INTO Payment (OrderID, Amount, PaymentMethod) VALUES (?, ?, ?)';
    db.query(sql, [orderId, amount, paymentMethod], (err, result) => {
        if (err) res.status(500).json({ error: err.message });
        else res.json({ id: result.insertId, ...req.body });
    });
};

exports.getPaymentById = (req, res) => {
    const sql = 'SELECT * FROM Payment WHERE PaymentID = ?';
    db.query(sql, [req.params.id], (err, result) => {
        if (err) res.status(500).json({ error: err.message });
        else res.json(result[0]);
    });
};

exports.deletePayment = (req, res) => {
    const sql = 'DELETE FROM Payment WHERE PaymentID = ?';
    db.query(sql, [req.params.id], (err, result) => {
        if (err) res.status(500).json({ error: err.message });
        else res.json({ message: 'Payment deleted successfully.' });
    });
};

// server.js

const paymentRoutes = require('./routes/payments');
app.use('/api/payments', paymentRoutes);


// index.html

<h2>Add Payment</h2>
<form id="paymentForm">
    <input type="number" id="orderId" placeholder="Order ID" required>
    <input type="number" id="amount" placeholder="Amount" step="0.01" required>
    <select id="paymentMethod" required>
        <option value="Credit Card">Credit Card</option>
        <option value="Debit Card">Debit Card</option>
        <option value="Cash">Cash</option>
        <option value="Online Payment">Online Payment</option>
    </select>
    <button type="submit">Add Payment</button>
</form>
<ul id="paymentList"></ul>


// JavaScript for Handling Payment Operations
   In assets/js/payment.js, add JavaScript to fetch, add, and display payments.

async function loadPayments() {
    try {
        const response = await fetch('http://localhost:5000/api/payments');
        const payments = await response.json();
        const paymentList = document.getElementById('paymentList');
        paymentList.innerHTML = '';
        payments.forEach(payment => {
            const li = document.createElement('li');
            li.textContent = Order ID: ${payment.OrderID}, Amount: ${payment.Amount}, Method: ${payment.PaymentMethod};
            paymentList.appendChild(li);
        });
    } catch (error) {
        console.error('Error fetching payments:', error);
    }
}

document.getElementById('paymentForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const orderId = document.getElementById('orderId').value;
    const amount = document.getElementById('amount').value;
    const paymentMethod = document.getElementById('paymentMethod').value;

    try {
        const response = await fetch('http://localhost:5000/api/payments', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ orderId, amount, paymentMethod })
        });
        if (response.ok) {
            loadPayments(); // Reload payments after adding
        }
    } catch (error) {
        console.error('Error adding payment:', error);
    }
});



// Load payments when the page loads

loadPayments();



// Link the JavaScript File in HTML
   In frontend/index.html, include the payment.js script.

<script src="assets/js/payment.js"></script>


//  
